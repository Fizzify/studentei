import {
  Table,
  TableBody,
  TableCaption,
  TableCell,
  TableHead,
  TableHeader,
  TableRow,
} from "~/components/ui/table";
import { Student } from "@prisma/client";
import {
  createColumnHelper,
  flexRender,
  getCoreRowModel,
  getPaginationRowModel,
  useReactTable,
} from "@tanstack/react-table";
import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import Link from "next/link";
import { ChangeEvent, useMemo, useState } from "react";
import { api } from "~/utils/api";
import { Input } from "~/components/ui/input";
import { useQueryClient } from "@tanstack/react-query";
import { LoadingPage } from "~/components/si/loading";

const columnHelper = createColumnHelper<Student>();

const Home = () => {
  const [search, setSearch] = useState("");
  const { data, isLoading, error } = api.student.getAll.useQuery(search);

  const columns = useMemo(
    () => [
      columnHelper.accessor((row) => row.id, {
        cell: (info) => info.getValue(),
        header: "ID",
      }),
      columnHelper.accessor((row) => row.firstName, {
        cell: (info) => info.getValue(),
        header: "First Name",
      }),
      columnHelper.accessor((row) => row.lastName, {
        cell: (info) => info.getValue(),
        header: "Last Name",
      }),
      columnHelper.accessor((row) => row.age, {
        cell: (info) => info.getValue(),
        header: "Age",
      }),
    ],
    []
  );

  const table = useReactTable({
    data: data ?? [],
    columns,
    getCoreRowModel: getCoreRowModel(),
    getPaginationRowModel: getPaginationRowModel(),
  });

  const handleSearchChange = (e: ChangeEvent<HTMLInputElement>) => {
    const value = e.target.value;

    setSearch(value);
  };

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen flex-col items-center justify-center">
        <div className="mx-auto w-[900px]">
          <Input
            onChange={handleSearchChange}
            placeholder="Search"
            value={search}
          />
          {isLoading ? (
            <LoadingPage />
          ) : error ? (
            <div>Error: {error.message}</div>
          ) : (
            <Table className="border">
              <TableCaption>
                A list of all the students in Waterloo University.
              </TableCaption>
              <TableHeader>
                {table.getHeaderGroups().map((headerGroup) => (
                  <TableRow key={headerGroup.id}>
                    {headerGroup.headers.map((header) => (
                      <TableHead
                        className="border-x bg-black font-bold text-white"
                        key={header.id}
                      >
                        {flexRender(
                          header.column.columnDef.header,
                          header.getContext()
                        )}
                      </TableHead>
                    ))}
                  </TableRow>
                ))}
              </TableHeader>
              <TableBody>
                {table.getRowModel().rows.map((row) => (
                  <TableRow key={row.id}>
                    {row.getAllCells().map((cell) => (
                      <TableCell className="border-x" key={cell.id}>
                        {flexRender(
                          cell.column.columnDef.cell,
                          cell.getContext()
                        )}
                      </TableCell>
                    ))}
                  </TableRow>
                ))}
              </TableBody>
            </Table>
          )}
        </div>
      </main>
    </>
  );
};

export default Home;
